# https://phelipetls.github.io/posts/introduction-to-ansible/
- name: Bootstrap a local environment
  hosts: localhost
  become: no
  vars:
    user_id: "{{ ansible_user_id }}"

  tasks:
  - name: Install required packages on Ubuntu
    become: yes
    apt:
      name:
        - git
        - curl
        - fish
      state: present
    when: ansible_distribution == "Ubuntu"

  # Prepare symbolic links at first
  - name: Create symbolic links for a $HOME/.config directory
    file:
      src: "{{ playbook_dir }}/static/common/.config/{{ item }}"
      dest: "{{ ansible_env.HOME }}/.config/{{ item  }}"
      state: link
    loop:
      - fish
      - git
      - tmux

  - name: Create symbolic links for a $HOME/ directory
    file:
      src: "{{ playbook_dir }}/static/common/{{ item }}"
      dest: "{{ ansible_env.HOME }}/{{ item }}"
      state: link
    loop:
      - .composer
      - .ssh
      - bin
      - .editorconfig
      - .eslintrc.json
      - .gitconfig
      - .gitignore



  # Fish
  - name: Create a symbolic link for a $HOME/.config directory
    file:
      src: "{{ playbook_dir }}/static/common/.config/{{ item }}"
      dest: "{{ ansible_env.HOME }}/.config/{{ item  }}"
      state: link
    loop:
      - fish
  - name: Download a fisher
    get_url:
      url: https://git.io/fisher
      dest: "{{ ansible_env.HOME }}/.config/fish/functions/fisher.fish"
  - name: Download fish plugins
    command:
      cmd: fish -c "fisher update"

  ## Change the default shell to fish
  - name: Get fish command path
    command: "which fish"
    register: fish_command_path
  - set_fact:
      fish_command_path: "{{ fish_command_path.stdout }}"
  - debug:
      msg: "Fish command path is {{ fish_command_path }}"
  - name: Check if a /etc/shells contains fish
    become: true
    lineinfile:
      dest: /etc/shells
      line: "{{ fish_command_path }}"
      state: present
  - name: Change the default user shell to fish
    become: true
    user:
      name: "{{ user_id }}"
      shell: "{{ fish_command_path }}"


  # Install anyenv
  - name: Clone anyenv repository
    git:
      repo: "https://github.com/anyenv/anyenv"
      dest: "{{ ansible_env.HOME }}/.anyenv"
  - name: Check if the anyenv manifest directory exists
    stat:
      path: "{{ ansible_env.HOME }}/.config/anyenv/anyenv-install"
    register: anyenv_manifest_directory
  - name: Initialize anyenv
    command: "~/.anyenv/bin/anyenv install --force-init"
    when: not anyenv_manifest_directory.stat.exists
  ## rbenv
  - name: Install required packages on Ubuntu to use rbenv
    become: yes
    apt:
      name:
        # - ruby-dev # todo: probably unnecessary
        - libz-dev # fix an error "zlib.h" not found during rbenv install 2.7.7
      state: present
    when: ansible_distribution == "Ubuntu"
  - name: Check if rbenv is already installed
    stat:
      path: "{{ ansible_env.HOME }}/.anyenv/envs/rbenv"
    register: rbenv_directory
  - name: Install rbenv
    command: "~/.anyenv/bin/anyenv install rbenv"
    when: not rbenv_directory.stat.exists
