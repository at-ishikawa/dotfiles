- tags:
    - always
  include_vars:
    file: ubuntu.yml

- tags:
    - apt
    - anyenv
    - rbenv
    - pyenv
  block:
    # Install for Ubuntu, regardless of WSL or non WSL
    - name: Install apt packages
      become: true
      block:
        - name: Update apt cache
          apt:
            update_cache: true
          ignore_errors: true
        - name: Install application packages on Ubuntu
          apt:
            name: "{{ apt_packages }}"
            state: latest

        - name: Install an app launcher
          block:
            # universe repository cannot be installed by apt_repository, so install it by hand
            # https://github.com/ansible/ansible/issues/48714
            - command: add-apt-repository -y universe
            - apt_repository:
                repo: "{{ item }}"
                state: present
              loop:
                - "ppa:agornostal/ulauncher"
            - apt:
                name:
                  - ulauncher
                state: latest
              # Bookmark launcher cannot be installed by a command
              # Extension install: https://github.com/Ulauncher/Ulauncher/issues/1018
              # Bookmark launcher: https://ext.ulauncher.io/-/github-man0xff-ulauncher-bookmarks
        - apt:
            name:
              # Clipboard manager: https://hluk.github.io/CopyQ/
              - copyq
              # I forgot why I installed this but this is a dependency for something
              - python3-psutil
            state: latest

- tags:
    - golang
  block:
    - command:
        cmd: go version
      check_mode: false
      register: go_version_output
      ignore_errors: true
    - set_fact:
        installed_go_version: "{{ go_version_output.stdout | regex_search('go([0-9.]+) ', '\\1') }}"
    - when: go_version_output.rc != 0 and dotfiles_go_version is defined and dotfiles_go_version != installed_go_version
      become: true
      block:
        - debug:
            msg: "Install Go {{ dotfiles_go_version }}, upgraded from {{ installed_go_version }}"
        - file:
            path: /usr/local/go
            state: absent
        - unarchive:
            remote_src: true
            src: https://go.dev/dl/go{{ dotfiles_go_version }}.linux-{{ deb_architecture }}.tar.gz
            dest: /usr/local
            mode: "0755"

- import_tasks: all_os.yml
- import_tasks: ubuntu_desktop.yml
  when: install_desktop_config

- import_role:
    name: anyenv
  vars:
    anyenv_ruby_version: "{{ dotfiles_ruby_version }}"
- import_role:
    name: tmux
  vars:
    tmux_gem_path: "{{ ansible_env.HOME }}/.anyenv/envs/rbenv/shims/gem"
- tags:
    - always
  include_role:
    name: "{{ role.name }}"
    tasks_from: "{{ role.task | default('main') }}"
  loop:
    - name: 1password
      task: apt
    - name: git
    - name: github-cli
      task: apt
    - name: keyd
  loop_control:
    loop_var: role
